{"ast":null,"code":"var _jsxFileName = \"F:\\\\webdevjects\\\\nlss-timer\\\\src\\\\components\\\\StreamInfo.js\";\nimport React from 'react';\nimport './css/StreamInfo.css';\n\nconst api = require('twitch-helix-api');\n\napi.clientID = 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'; // b2db5ebd1658eef596137314b88ce2fe25a9e621\n\nlet live = 'Live';\nlet offline = 'Offline';\nlet status = offline;\nlet streamInfo;\n\nclass StreamInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      [this.props.user]: offline,\n      game: undefined\n    };\n\n    this.checkLive = async streamer => {\n      let thisState = this;\n      api.streams.getStreams({\n        user_login: streamer\n      }).then(function (data) {\n        if (data.response.data[0]) {\n          streamInfo = data.response.data[0];\n          let un = streamInfo.user_name.toLowerCase();\n          status = live;\n          thisState.setState({\n            [un]: live\n          });\n        }\n      });\n    };\n\n    this.getGame = () => {\n      let thisState = this;\n      api.games.getGames({\n        id: streamInfo.game_id\n      }).then(function (data) {\n        return thisState.setState({\n          game: data.response.data[0].name\n        });\n      });\n    };\n\n    this.isLive = () => {\n      if (status === live) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"stream-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, streamInfo.title), React.createElement(\"div\", {\n          className: \"stream-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, this.getGame()));\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.checkLive(this.props.user);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'stream-container ' + status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.props.user.toUpperCase()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.state[this.props.user]), this.isLive());\n  }\n\n}\n\nexport default StreamInfo;","map":{"version":3,"sources":["F:/webdevjects/nlss-timer/src/components/StreamInfo.js"],"names":["React","api","require","clientID","live","offline","status","streamInfo","StreamInfo","Component","state","props","user","game","undefined","checkLive","streamer","thisState","streams","getStreams","user_login","then","data","response","un","user_name","toLowerCase","setState","getGame","games","getGames","id","game_id","name","isLive","title","componentDidMount","render","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AAEAD,GAAG,CAACE,QAAJ,GAAe,gCAAf,C,CACA;;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,OAAO,GAAG,SAAd;AACA,IAAIC,MAAM,GAAGD,OAAb;AAEA,IAAIE,UAAJ;;AAEA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAAE,OAAC,KAAKC,KAAL,CAAWC,IAAZ,GAAmBP,OAArB;AAA8BQ,MAAAA,IAAI,EAAEC;AAApC,KAF6B;;AAAA,SAQrCC,SARqC,GAQzB,MAAMC,QAAN,IAAkB;AAC1B,UAAIC,SAAS,GAAG,IAAhB;AAEAhB,MAAAA,GAAG,CAACiB,OAAJ,CAAYC,UAAZ,CAAuB;AAACC,QAAAA,UAAU,EAAEJ;AAAb,OAAvB,EAA+CK,IAA/C,CAAoD,UAASC,IAAT,EAAe;AAC/D,YAAGA,IAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,CAAnB,CAAH,EAA0B;AACtBf,UAAAA,UAAU,GAAGe,IAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,CAAnB,CAAb;AACA,cAAIE,EAAE,GAAGjB,UAAU,CAACkB,SAAX,CAAqBC,WAArB,EAAT;AAEApB,UAAAA,MAAM,GAAGF,IAAT;AAEAa,UAAAA,SAAS,CAACU,QAAV,CAAmB;AAAC,aAACH,EAAD,GAAMpB;AAAP,WAAnB;AACH;AACJ,OATD;AAUH,KArBoC;;AAAA,SAsBrCwB,OAtBqC,GAsB3B,MAAM;AACZ,UAAIX,SAAS,GAAG,IAAhB;AAEAhB,MAAAA,GAAG,CAAC4B,KAAJ,CAAUC,QAAV,CAAmB;AAACC,QAAAA,EAAE,EAAExB,UAAU,CAACyB;AAAhB,OAAnB,EAA6CX,IAA7C,CAAkD,UAASC,IAAT,EAAe;AAC7D,eAAOL,SAAS,CAACU,QAAV,CAAmB;AAACd,UAAAA,IAAI,EAAES,IAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,CAAnB,EAAsBW;AAA7B,SAAnB,CAAP;AACH,OAFD;AAGH,KA5BoC;;AAAA,SA6BrCC,MA7BqC,GA6B5B,MAAM;AACX,UAAG5B,MAAM,KAAKF,IAAd,EAAoB;AAChB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BG,UAAU,CAAC4B,KAA1C,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+B,KAAKP,OAAL,EAA/B,CAFJ,CADJ;AAMH;AACJ,KAtCoC;AAAA;;AAIrCQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKrB,SAAL,CAAe,KAAKJ,KAAL,CAAWC,IAA1B;AACH;;AAkCDyB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAE,sBAAsB/B,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKK,KAAL,CAAWC,IAAX,CAAgB0B,WAAhB,EAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAK5B,KAAL,CAAW,KAAKC,KAAL,CAAWC,IAAtB,CAAN,CAFJ,EAGK,KAAKsB,MAAL,EAHL,CADJ;AAOH;;AAhDoC;;AAoDzC,eAAe1B,UAAf","sourcesContent":["import React from 'react';\r\nimport './css/StreamInfo.css';\r\n\r\nconst api = require('twitch-helix-api');\r\n\r\napi.clientID = 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'\r\n// b2db5ebd1658eef596137314b88ce2fe25a9e621\r\nlet live = 'Live';\r\nlet offline = 'Offline';\r\nlet status = offline;\r\n\r\nlet streamInfo;\r\n\r\nclass StreamInfo extends React.Component {\r\n\r\n    state = { [this.props.user]: offline, game: undefined};\r\n\r\n    componentDidMount() {\r\n        this.checkLive(this.props.user)\r\n    }\r\n    \r\n    checkLive = async streamer => {\r\n        let thisState = this\r\n\r\n        api.streams.getStreams({user_login: streamer}).then(function(data) {\r\n            if(data.response.data[0]) {\r\n                streamInfo = data.response.data[0];\r\n                let un = streamInfo.user_name.toLowerCase();\r\n\r\n                status = live;\r\n                \r\n                thisState.setState({[un]: live});\r\n            }\r\n        });\r\n    }\r\n    getGame = () => {\r\n        let thisState = this\r\n\r\n        api.games.getGames({id: streamInfo.game_id}).then(function(data) {\r\n            return thisState.setState({game: data.response.data[0].name})\r\n        })\r\n    }\r\n    isLive = () => {\r\n        if(status === live) {\r\n            return (\r\n                <div>\r\n                    <div className=\"stream-title\">{streamInfo.title}</div>\r\n                    <div className=\"stream-title\">{this.getGame()}</div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'stream-container ' + status}>\r\n                <h1 className='user'>{this.props.user.toUpperCase()}</h1>\r\n                <div>{this.state[this.props.user]}</div>\r\n                {this.isLive()}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default StreamInfo;"]},"metadata":{},"sourceType":"module"}
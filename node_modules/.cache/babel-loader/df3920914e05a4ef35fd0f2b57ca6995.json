{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDTDElement, XMLNode;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType'); // Represents an attribute\n\n  module.exports = XMLDTDElement = class XMLDTDElement extends XMLNode {\n    // Initializes a new instance of `XMLDTDElement`\n    // `parent` the parent `XMLDocType` element\n    // `name` element name\n    // `value` element content (defaults to #PCDATA)\n    constructor(parent, name, value) {\n      super(parent);\n\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    } // Converts the XML fragment to string\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n\n\n    toString(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}
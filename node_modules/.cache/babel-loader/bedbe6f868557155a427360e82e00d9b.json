{"ast":null,"code":"var _jsxFileName = \"F:\\\\webdevjects\\\\nlss-timer\\\\src\\\\components\\\\StreamInfo.js\";\nimport React from 'react';\nimport './css/StreamInfo.css';\n\nconst api = require('twitch-helix-api');\n\napi.clientID = 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'; // b2db5ebd1658eef596137314b88ce2fe25a9e621\n\nlet live = 'Live';\nlet offline = 'Offline';\nlet status = offline;\nlet twitch;\nlet twitter;\nlet youtube;\nlet streamInfo;\n\nclass StreamInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.twitch = this.props.user[0];\n    this.twitter = this.props.user[1];\n    this.youtube = this.props.user[2];\n    this.state = {\n      [twitch]: offline,\n      game: undefined,\n      title: undefined\n    };\n\n    this.checkLive = async streamer => {\n      let thisState = this;\n      api.streams.getStreams({\n        user_login: streamer\n      }).then(function (data) {\n        if (data.response.data[0]) {\n          streamInfo = data.response.data[0];\n          let un = streamInfo.user_name.toLowerCase();\n          thisState.setState({\n            title: streamInfo.title\n          });\n          api.games.getGames({\n            id: streamInfo.game_id\n          }).then(function (data) {\n            thisState.setState({\n              game: data.response.data[0].name\n            });\n          });\n          status = live;\n          thisState.setState({\n            [un]: live\n          });\n        }\n      });\n    };\n\n    this.getGame = () => {\n      let thisState = this;\n\n      if (status === live) {\n        return React.createElement(\"div\", {\n          className: \"stream-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, thisState.game);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.checkLive(twitch);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'stream-container ' + status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: 'https://twitch.tv/' + twitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, twitch)), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state[twitch]), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"stream-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      className: \"stream-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, this.state.game));\n  }\n\n}\n\nexport default StreamInfo;","map":{"version":3,"sources":["F:/webdevjects/nlss-timer/src/components/StreamInfo.js"],"names":["React","api","require","clientID","live","offline","status","twitch","twitter","youtube","streamInfo","StreamInfo","Component","props","user","state","game","undefined","title","checkLive","streamer","thisState","streams","getStreams","user_login","then","data","response","un","user_name","toLowerCase","setState","games","getGames","id","game_id","name","getGame","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AAEAD,GAAG,CAACE,QAAJ,GAAe,gCAAf,C,CACA;;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,OAAO,GAAG,SAAd;AACA,IAAIC,MAAM,GAAGD,OAAb;AAEA,IAAIE,MAAJ;AACA,IAAIC,OAAJ;AACA,IAAIC,OAAJ;AAEA,IAAIC,UAAJ;;AAEA,MAAMC,UAAN,SAAyBX,KAAK,CAACY,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCL,MAFqC,GAE5B,KAAKM,KAAL,CAAWC,IAAX,CAAgB,CAAhB,CAF4B;AAAA,SAGrCN,OAHqC,GAG3B,KAAKK,KAAL,CAAWC,IAAX,CAAgB,CAAhB,CAH2B;AAAA,SAIrCL,OAJqC,GAI3B,KAAKI,KAAL,CAAWC,IAAX,CAAgB,CAAhB,CAJ2B;AAAA,SAMrCC,KANqC,GAM7B;AAAE,OAACR,MAAD,GAAUF,OAAZ;AAAqBW,MAAAA,IAAI,EAAEC,SAA3B;AAAsCC,MAAAA,KAAK,EAAED;AAA7C,KAN6B;;AAAA,SAYrCE,SAZqC,GAYzB,MAAMC,QAAN,IAAkB;AAC1B,UAAIC,SAAS,GAAG,IAAhB;AAEApB,MAAAA,GAAG,CAACqB,OAAJ,CAAYC,UAAZ,CAAuB;AAACC,QAAAA,UAAU,EAAEJ;AAAb,OAAvB,EAA+CK,IAA/C,CAAoD,UAASC,IAAT,EAAe;AAC/D,YAAGA,IAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,CAAnB,CAAH,EAA0B;AACtBhB,UAAAA,UAAU,GAAGgB,IAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,CAAnB,CAAb;AACA,cAAIE,EAAE,GAAGlB,UAAU,CAACmB,SAAX,CAAqBC,WAArB,EAAT;AAEAT,UAAAA,SAAS,CAACU,QAAV,CAAmB;AAACb,YAAAA,KAAK,EAAER,UAAU,CAACQ;AAAnB,WAAnB;AAEAjB,UAAAA,GAAG,CAAC+B,KAAJ,CAAUC,QAAV,CAAmB;AAACC,YAAAA,EAAE,EAAExB,UAAU,CAACyB;AAAhB,WAAnB,EAA6CV,IAA7C,CAAkD,UAASC,IAAT,EAAe;AAC7DL,YAAAA,SAAS,CAACU,QAAV,CAAmB;AAACf,cAAAA,IAAI,EAAEU,IAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,CAAnB,EAAsBU;AAA7B,aAAnB;AACH,WAFD;AAIA9B,UAAAA,MAAM,GAAGF,IAAT;AAEAiB,UAAAA,SAAS,CAACU,QAAV,CAAmB;AAAC,aAACH,EAAD,GAAMxB;AAAP,WAAnB;AACH;AACJ,OAfD;AAgBH,KA/BoC;;AAAA,SAiCrCiC,OAjCqC,GAiC3B,MAAM;AACZ,UAAIhB,SAAS,GAAG,IAAhB;;AAEA,UAAGf,MAAM,KAAKF,IAAd,EAAoB;AAChB,eAAO;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA8BiB,SAAS,CAACL,IAAxC,CAAP;AACH;AACJ,KAvCoC;AAAA;;AAQrCsB,EAAAA,iBAAiB,GAAG;AAChB,SAAKnB,SAAL,CAAeZ,MAAf;AACH;;AA+BDgC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAE,sBAAsBjC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,IAAI,EAAE,uBAAuBC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwC;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBA,MAAtB,CAAxC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKQ,KAAL,CAAWR,MAAX,CAAN,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKQ,KAAL,CAAWG,KAA1C,CAJJ,EAKI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA+B,KAAKH,KAAL,CAAWC,IAA1C,CALJ,CADJ;AASH;;AAnDoC;;AAuDzC,eAAeL,UAAf","sourcesContent":["import React from 'react';\r\nimport './css/StreamInfo.css';\r\n\r\nconst api = require('twitch-helix-api');\r\n\r\napi.clientID = 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'\r\n// b2db5ebd1658eef596137314b88ce2fe25a9e621\r\nlet live = 'Live';\r\nlet offline = 'Offline';\r\nlet status = offline;\r\n\r\nlet twitch;\r\nlet twitter;\r\nlet youtube;\r\n\r\nlet streamInfo;\r\n\r\nclass StreamInfo extends React.Component {\r\n\r\n    twitch = this.props.user[0];\r\n    twitter = this.props.user[1];\r\n    youtube = this.props.user[2];\r\n\r\n    state = { [twitch]: offline, game: undefined, title: undefined};\r\n\r\n    componentDidMount() {\r\n        this.checkLive(twitch)\r\n    }\r\n    \r\n    checkLive = async streamer => {\r\n        let thisState = this\r\n\r\n        api.streams.getStreams({user_login: streamer}).then(function(data) {\r\n            if(data.response.data[0]) {\r\n                streamInfo = data.response.data[0];\r\n                let un = streamInfo.user_name.toLowerCase();\r\n\r\n                thisState.setState({title: streamInfo.title})\r\n\r\n                api.games.getGames({id: streamInfo.game_id}).then(function(data) {\r\n                    thisState.setState({game: data.response.data[0].name})\r\n                })\r\n\r\n                status = live;\r\n                \r\n                thisState.setState({[un]: live});\r\n            }\r\n        });\r\n    }\r\n \r\n    getGame = () => {\r\n        let thisState = this\r\n\r\n        if(status === live) {\r\n            return <div className=\"stream-info\">{thisState.game}</div>\r\n        }\r\n    }    \r\n\r\n    render(){\r\n        return(\r\n            <div className={'stream-container ' + status}>\r\n                <a href={'https://twitch.tv/' + twitch}><h1 className='user'>{twitch}</h1></a>\r\n                <div>{this.state[twitch]}</div>\r\n                <hr />\r\n                <div className=\"stream-title\">{this.state.title}</div>\r\n                <div className=\"stream-title\">{this.state.game}</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default StreamInfo;"]},"metadata":{},"sourceType":"module"}
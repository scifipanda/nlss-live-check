{"ast":null,"code":"var _jsxFileName = \"F:\\\\webdevjects\\\\nlss-timer\\\\src\\\\components\\\\StreamInfo.js\";\nimport React from 'react';\nimport './css/StreamInfo.css';\nimport twitch from './api/twitch';\nimport twittersvg from \"./images/twitter.svg\";\nimport youtubesvg from \"./images/youtube.svg\"; // Global variables\n\nlet live = 'Live';\nlet offline = 'Offline';\nlet status = offline;\nlet streamInfo;\n\nclass StreamInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      [this.props.user[0]]: offline,\n      game: undefined,\n      title: undefined\n    };\n\n    this.checkLive = async streamer => {\n      // Function to check who is live and to set title to live channels title\n      let thisState = this;\n      const response = await twitch.get('/streams/', {\n        params: {\n          user_login: streamer\n        }\n      });\n\n      if (response.data.data[0]) {\n        streamInfo = response.data.data[0];\n        let un = streamInfo.user_name.toLowerCase();\n        thisState.setState({\n          title: streamInfo.title\n        });\n        const game = await twitch.get('/games/', {\n          params: {\n            id: response.data.data[0].game_id\n          }\n        });\n        thisState.setState({\n          game: game.data.data[0].name\n        });\n        thisState.setState({\n          [un]: live\n        });\n      }\n    };\n\n    this.getGame = () => {\n      // Function to get current game being played by live channel\n      let thisState = this;\n\n      if (status === live) {\n        return React.createElement(\"div\", {\n          className: \"stream-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, thisState.game);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.checkLive(this.props.user[0]);\n  }\n\n  render() {\n    if (!this.props.isHidden || this.state[this.props.user[0]] === live) {\n      return React.createElement(\"div\", {\n        className: 'stream-container bold center ' + this.state[this.props.user[0]],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: 'https://twitch.tv/' + this.props.user[0],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.props.user[0].toUpperCase())), React.createElement(\"div\", {\n        className: \"stream-info-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: 'https://twitter.com/' + this.props.user[1],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"icon\",\n        src: twittersvg,\n        alt: \"twitter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.state[this.props.user[0]]), React.createElement(\"a\", {\n        href: 'https://youtube.com/' + this.props.user[2],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"icon\",\n        src: youtubesvg,\n        alt: \"youtube\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }))), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"stream-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.state.title), React.createElement(\"div\", {\n        className: \"stream-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, this.state.game));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default StreamInfo;","map":{"version":3,"sources":["F:/webdevjects/nlss-timer/src/components/StreamInfo.js"],"names":["React","twitch","live","offline","status","streamInfo","StreamInfo","Component","state","props","user","game","undefined","title","checkLive","streamer","thisState","response","get","params","user_login","data","un","user_name","toLowerCase","setState","id","game_id","name","getGame","componentDidMount","render","isHidden","toUpperCase","twittersvg","youtubesvg"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/StreamInfo.css';\r\nimport twitch from './api/twitch';\r\nimport twittersvg from './images/twitter.svg';\r\nimport youtubesvg from './images/youtube.svg';\r\n\r\n// Global variables\r\nlet live = 'Live';\r\nlet offline = 'Offline';\r\nlet status = offline;\r\nlet streamInfo;\r\n\r\nclass StreamInfo extends React.Component {\r\n\r\n    state = { [this.props.user[0]]: offline, game: undefined, title: undefined};\r\n\r\n    componentDidMount() {\r\n        this.checkLive(this.props.user[0])\r\n    }\r\n    \r\n    checkLive = async streamer => { // Function to check who is live and to set title to live channels title\r\n        let thisState = this\r\n        \r\n        const response = await twitch.get('/streams/', {\r\n            params: { user_login: streamer }\r\n        })\r\n\r\n        if(response.data.data[0]) {\r\n            streamInfo = response.data.data[0];\r\n            let un = streamInfo.user_name.toLowerCase();\r\n            \r\n            thisState.setState({title: streamInfo.title})\r\n\r\n            const game = await twitch.get('/games/', {\r\n                params: { id: response.data.data[0].game_id}\r\n            })\r\n            \r\n            thisState.setState({game: game.data.data[0].name})\r\n            \r\n            thisState.setState({[un]: live});\r\n        }\r\n    }\r\n \r\n    getGame = () => { // Function to get current game being played by live channel\r\n        let thisState = this\r\n\r\n        if(status === live) {\r\n            return <div className=\"stream-info\">{thisState.game}</div>\r\n        }\r\n    }    \r\n\r\n    render(){\r\n        if(!this.props.isHidden || this.state[this.props.user[0]] === live) {\r\n           return(\r\n            <div className={'stream-container bold center ' + this.state[this.props.user[0]]}>\r\n                <a href={'https://twitch.tv/' + this.props.user[0]}><h1 className='user'>{this.props.user[0].toUpperCase()}</h1></a>\r\n\r\n                <div className=\"stream-info-container\">\r\n                    <a href={'https://twitter.com/' + this.props.user[1]}><img className=\"icon\" src={twittersvg} alt=\"twitter\"/> </a>\r\n                    <div>{this.state[this.props.user[0]]}</div>\r\n                    <a href={'https://youtube.com/' + this.props.user[2]}><img className=\"icon\" src={youtubesvg} alt=\"youtube\" /></a>\r\n                </div>\r\n                \r\n                <hr />\r\n\r\n                <div className=\"stream-title\">{this.state.title}</div>\r\n                <div className=\"stream-title\">{this.state.game}</div>\r\n            </div>\r\n        ) \r\n        }\r\n        return <div className=\"hidden\"></div>\r\n    }\r\n    \r\n}\r\n\r\nexport default StreamInfo;"]},"metadata":{},"sourceType":"module"}
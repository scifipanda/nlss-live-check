{"ast":null,"code":"var _classCallCheck = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDummy, XMLNode;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType'); // Represents a  raw node\n\n  module.exports = XMLDummy =\n  /*#__PURE__*/\n  function (_XMLNode) {\n    \"use strict\";\n\n    _inherits(XMLDummy, _XMLNode);\n\n    // Initializes a new instance of `XMLDummy`\n    // `XMLDummy` is a special node representing a node with \n    // a null value. Dummy nodes are created while recursively\n    // building the XML tree. Simply skipping null values doesn't\n    // work because that would break the recursive chain.\n    function XMLDummy(parent) {\n      var _this;\n\n      _classCallCheck(this, XMLDummy);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(XMLDummy).call(this, parent));\n      _this.type = NodeType.Dummy;\n      return _this;\n    } // Creates and returns a deep clone of `this`\n\n\n    _createClass(XMLDummy, [{\n      key: \"clone\",\n      value: function clone() {\n        return Object.create(this);\n      } // Converts the XML fragment to string\n      // `options.pretty` pretty prints the result\n      // `options.indent` indentation for pretty print\n      // `options.offset` how many indentations to add to every line for pretty print\n      // `options.newline` newline sequence for pretty print\n\n    }, {\n      key: \"toString\",\n      value: function toString(options) {\n        return '';\n      }\n    }]);\n\n    return XMLDummy;\n  }(XMLNode);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}
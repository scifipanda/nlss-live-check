{"ast":null,"code":"// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDeclaration, XMLNode, isObject;\n\n  var _require = require('./Utility');\n\n  isObject = _require.isObject;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType'); // Represents the XML declaration\n\n  module.exports = XMLDeclaration = class XMLDeclaration extends XMLNode {\n    // Initializes a new instance of `XMLDeclaration`\n    // `parent` the document object\n    // `version` A version number string, e.g. 1.0\n    // `encoding` Encoding declaration, e.g. UTF-8\n    // `standalone` standalone document declaration: true or false\n    constructor(parent, version, encoding, standalone) {\n      super(parent); // arguments may also be passed as an object\n\n      if (isObject(version)) {\n        var _version = version;\n        version = _version.version;\n        encoding = _version.encoding;\n        standalone = _version.standalone;\n      }\n\n      if (!version) {\n        version = '1.0';\n      }\n\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    } // Converts to string\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n\n\n    toString(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    }\n\n  };\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}
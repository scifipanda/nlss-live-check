{"ast":null,"code":"var _jsxFileName = \"F:\\\\webdevjects\\\\nlss-timer\\\\src\\\\components\\\\StreamInfo.js\";\nimport React from 'react';\nimport './css/StreamInfo.css';\nimport twitch from './api/twitch';\nimport twittersvg from \"./images/twitter.svg\";\nimport youtubesvg from \"./images/youtube.svg\"; // api.clientID = 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'\n\nlet live = 'Live';\nlet offline = 'Offline';\nlet status = offline;\nlet streamInfo;\n\nclass StreamInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      [this.props.user[0]]: offline,\n      game: undefined,\n      title: undefined\n    };\n\n    this.checkLive = async streamer => {\n      // let thisState = this\n      const response = await twitch.get('/streams/', {\n        params: {\n          user_login: streamer\n        }\n      });\n\n      if (data.response.data[0]) {\n        streamInfo = data.response.data[0];\n        let un = streamInfo.user_name.toLowerCase();\n        thisState.setState({\n          title: streamInfo.title\n        });\n        api.games.getGames({\n          id: streamInfo.game_id\n        }).then(function (data) {\n          thisState.setState({\n            game: data.response.data[0].name\n          });\n        });\n        status = live;\n        thisState.setState({\n          [un]: live\n        });\n      }\n    };\n\n    this.getGame = () => {\n      let thisState = this;\n\n      if (status === live) {\n        return React.createElement(\"div\", {\n          className: \"stream-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, thisState.game);\n      } else {\n        return React.createElement(\"a\", {\n          class: \"twitter-timeline\",\n          href: \"https://twitter.com/northernlionlp\",\n          \"data-width\": \"250\",\n          \"data-height\": \"150\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.checkLive(this.props.user[0]);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'stream-container bold center ' + status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: 'https://twitch.tv/' + this.props.user[0],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, this.props.user[0].toUpperCase())), React.createElement(\"div\", {\n      className: \"stream-info-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: 'https://twitter.com/' + this.props.user[1],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"icon\",\n      src: twittersvg,\n      alt: \"twitter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, this.state[this.props.user[0]]), React.createElement(\"a\", {\n      href: 'https://youtube.com/' + this.props.user[2],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"icon\",\n      src: youtubesvg,\n      alt: \"youtube\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"stream-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.title), React.createElement(\"div\", {\n      className: \"stream-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.state.game));\n  }\n\n}\n\nexport default StreamInfo;","map":{"version":3,"sources":["F:/webdevjects/nlss-timer/src/components/StreamInfo.js"],"names":["React","twitch","live","offline","status","streamInfo","StreamInfo","Component","state","props","user","game","undefined","title","checkLive","streamer","response","get","params","user_login","data","un","user_name","toLowerCase","thisState","setState","api","games","getGames","id","game_id","then","name","getGame","componentDidMount","render","toUpperCase","twittersvg","youtubesvg"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/StreamInfo.css';\r\nimport twitch from './api/twitch';\r\nimport twittersvg from './images/twitter.svg';\r\nimport youtubesvg from './images/youtube.svg';\r\n\r\n// api.clientID = 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'\r\n\r\nlet live = 'Live';\r\nlet offline = 'Offline';\r\nlet status = offline;\r\n\r\n\r\n\r\nlet streamInfo;\r\n\r\nclass StreamInfo extends React.Component {\r\n\r\n    state = { [this.props.user[0]]: offline, game: undefined, title: undefined};\r\n\r\n    componentDidMount() {\r\n        this.checkLive(this.props.user[0])\r\n    }\r\n    \r\n    checkLive = async streamer => {\r\n        // let thisState = this\r\n        \r\n        const response = await twitch.get('/streams/', {\r\n            params: { user_login: streamer }\r\n        })\r\n\r\n\r\n\r\n        if(data.response.data[0]) {\r\n            streamInfo = data.response.data[0];\r\n            let un = streamInfo.user_name.toLowerCase();\r\n\r\n            thisState.setState({title: streamInfo.title})\r\n\r\n            api.games.getGames({id: streamInfo.game_id}).then(function(data) {\r\n                thisState.setState({game: data.response.data[0].name})\r\n            })\r\n\r\n            status = live;\r\n            \r\n            thisState.setState({[un]: live});\r\n        }\r\n    }\r\n \r\n    getGame = () => {\r\n        let thisState = this\r\n\r\n        if(status === live) {\r\n            return <div className=\"stream-info\">{thisState.game}</div>\r\n        }\r\n\r\n        else {\r\n            return (\r\n                <a class=\"twitter-timeline\"\r\n                    href=\"https://twitter.com/northernlionlp\"\r\n                    data-width=\"250\"\r\n                    data-height=\"150\">\r\n                </a>\r\n            )\r\n        }\r\n        \r\n    }    \r\n\r\n    render(){\r\n        return(\r\n            <div className={'stream-container bold center ' + status}>\r\n                <a href={'https://twitch.tv/' + this.props.user[0]}><h1 className='user'>{this.props.user[0].toUpperCase()}</h1></a>\r\n                <div className=\"stream-info-container\">\r\n                    <a href={'https://twitter.com/' + this.props.user[1]}><img className=\"icon\" src={twittersvg} alt=\"twitter\"/> </a>\r\n                    <div>{this.state[this.props.user[0]]}</div>\r\n                    <a href={'https://youtube.com/' + this.props.user[2]}><img className=\"icon\" src={youtubesvg} alt=\"youtube\" /></a>\r\n                </div>\r\n                \r\n                <hr />\r\n                <div className=\"stream-title\">{this.state.title}</div>\r\n                <div className=\"stream-title\">{this.state.game}</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default StreamInfo;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"F:\\\\webdevjects\\\\nlss-timer\\\\src\\\\components\\\\StreamInfo.js\";\nimport React from 'react';\nimport './css/StreamInfo.css';\n\nconst api = require('twitch-helix-api');\n\napi.clientID = 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'; // b2db5ebd1658eef596137314b88ce2fe25a9e621\n\nlet live = 'Live';\nlet offline = 'Offline';\nlet status = offline;\nlet streamInfo;\n\nclass StreamInfo extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      [this.props.user]: offline\n    };\n\n    this.checkLive = async streamer => {\n      let thisState = this;\n      api.streams.getStreams({\n        user_login: streamer\n      }).then(function (data) {\n        if (data.response.data[0]) {\n          streamInfo = data.response.data[0];\n          let un = streamInfo.user_name.toLowerCase();\n          let game = api.games.getGames({\n            id: streamInfo.game_id\n          });\n          status = live; // let gamePlay = game.response.data[0].name;\n\n          thisState.setState({\n            [un]: live\n          });\n        }\n      });\n    };\n\n    this.isLive = () => {\n      if (status === live) {\n        return React.createElement(\"div\", {\n          className: \"stream-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, streamInfo.title);\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.checkLive(this.props.user);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: 'stream-container ' + status,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.props.user.toUpperCase()), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, this.state[this.props.user]), this.isLive());\n  }\n\n}\n\nexport default StreamInfo;","map":{"version":3,"sources":["F:/webdevjects/nlss-timer/src/components/StreamInfo.js"],"names":["React","api","require","clientID","live","offline","status","streamInfo","StreamInfo","Component","state","props","user","checkLive","streamer","thisState","streams","getStreams","user_login","then","data","response","un","user_name","toLowerCase","game","games","getGames","id","game_id","setState","isLive","title","componentDidMount","render","toUpperCase"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAAC,kBAAD,CAAnB;;AAEAD,GAAG,CAACE,QAAJ,GAAe,gCAAf,C,CACA;;AACA,IAAIC,IAAI,GAAG,MAAX;AACA,IAAIC,OAAO,GAAG,SAAd;AACA,IAAIC,MAAM,GAAGD,OAAb;AAEA,IAAIE,UAAJ;;AAEA,MAAMC,UAAN,SAAyBR,KAAK,CAACS,SAA/B,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAAE,OAAC,KAAKC,KAAL,CAAWC,IAAZ,GAAmBP;AAArB,KAF6B;;AAAA,SAQrCQ,SARqC,GAQzB,MAAMC,QAAN,IAAkB;AAC1B,UAAIC,SAAS,GAAG,IAAhB;AAEAd,MAAAA,GAAG,CAACe,OAAJ,CAAYC,UAAZ,CAAuB;AAACC,QAAAA,UAAU,EAAEJ;AAAb,OAAvB,EAA+CK,IAA/C,CAAoD,UAASC,IAAT,EAAe;AAC/D,YAAGA,IAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,CAAnB,CAAH,EAA0B;AACtBb,UAAAA,UAAU,GAAGa,IAAI,CAACC,QAAL,CAAcD,IAAd,CAAmB,CAAnB,CAAb;AACA,cAAIE,EAAE,GAAGf,UAAU,CAACgB,SAAX,CAAqBC,WAArB,EAAT;AACA,cAAIC,IAAI,GAAGxB,GAAG,CAACyB,KAAJ,CAAUC,QAAV,CAAmB;AAACC,YAAAA,EAAE,EAAErB,UAAU,CAACsB;AAAhB,WAAnB,CAAX;AAEAvB,UAAAA,MAAM,GAAGF,IAAT,CALsB,CAMtB;;AAEAW,UAAAA,SAAS,CAACe,QAAV,CAAmB;AAAC,aAACR,EAAD,GAAMlB;AAAP,WAAnB;AACH;AACJ,OAXD;AAYH,KAvBoC;;AAAA,SAyBrC2B,MAzBqC,GAyB5B,MAAM;AACX,UAAGzB,MAAM,KAAKF,IAAd,EAAoB;AAChB,eAAO;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA+BG,UAAU,CAACyB,KAA1C,CAAP;AACH;AACJ,KA7BoC;AAAA;;AAIrCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKpB,SAAL,CAAe,KAAKF,KAAL,CAAWC,IAA1B;AACH;;AAyBDsB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAE,sBAAsB5B,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsB,KAAKK,KAAL,CAAWC,IAAX,CAAgBuB,WAAhB,EAAtB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKzB,KAAL,CAAW,KAAKC,KAAL,CAAWC,IAAtB,CAAN,CAFJ,EAGK,KAAKmB,MAAL,EAHL,CADJ;AAOH;;AAvCoC;;AA2CzC,eAAevB,UAAf","sourcesContent":["import React from 'react';\r\nimport './css/StreamInfo.css';\r\n\r\nconst api = require('twitch-helix-api');\r\n\r\napi.clientID = 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'\r\n// b2db5ebd1658eef596137314b88ce2fe25a9e621\r\nlet live = 'Live';\r\nlet offline = 'Offline';\r\nlet status = offline;\r\n\r\nlet streamInfo;\r\n\r\nclass StreamInfo extends React.Component {\r\n\r\n    state = { [this.props.user]: offline };\r\n\r\n    componentDidMount() {\r\n        this.checkLive(this.props.user)\r\n    }\r\n    \r\n    checkLive = async streamer => {\r\n        let thisState = this\r\n\r\n        api.streams.getStreams({user_login: streamer}).then(function(data) {\r\n            if(data.response.data[0]) {\r\n                streamInfo = data.response.data[0];\r\n                let un = streamInfo.user_name.toLowerCase();\r\n                let game = api.games.getGames({id: streamInfo.game_id})\r\n\r\n                status = live;\r\n                // let gamePlay = game.response.data[0].name;\r\n\r\n                thisState.setState({[un]: live});\r\n            }\r\n        });\r\n    }\r\n\r\n    isLive = () => {\r\n        if(status === live) {\r\n            return <div className=\"stream-title\">{streamInfo.title}</div>\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className={'stream-container ' + status}>\r\n                <h1 className='user'>{this.props.user.toUpperCase()}</h1>\r\n                <div>{this.state[this.props.user]}</div>\r\n                {this.isLive()}\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default StreamInfo;"]},"metadata":{},"sourceType":"module"}
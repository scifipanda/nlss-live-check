{"ast":null,"code":"var queryString = require(\"query-string\");\n\nrequest = require(\"./request\"), helpers = require(\"./helpers\");\nmodule.exports = {\n  getVideos: function getVideos(data) {\n    return new Promise(function (resolve, reject) {\n      if (!data || (!data.id || data.id.length === 0) && (!data.user_id || data.user_id.length === 0) && (!data.game_id || data.game_id.length === 0)) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You must specify a video ID, user ID or game ID.\", null));\n      } else if (data.id && data.id.length > 100) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified too many video IDs. The maximum is 1.\", null));\n      } else if (data.user_id && data.user_id.length > 100) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified too many user IDs. The maximum is 100.\", null));\n      } else if (data.game_id && data.game_id.length > 100) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified too many game IDs. The maximum is 100.\", null));\n      } else if (data && data.first && data.first > 100) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified a first parameter that is too high The maximum is 100.\", null));\n      } else if (data && data.first && data.first < 0) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified a first parameter that is too low. The minimum is 1.\", null));\n      } else if (data && data.language && data.language.length > 1) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified too many languages. The maximum is 1.\", null));\n      } else if (data && data.language && data.language.length > 1) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified too many languages. The maximum is 1.\", null));\n      } else if (data && data.period && data.period !== \"all\" && data.period !== \"day\" && data.period !== \"month\" && data.period !== \"week\") {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified an invalid period parameter. The options are 'all', 'day', 'month' or 'week'.\", null));\n      } else if (data && data.sort && data.sort !== \"time\" && data.sort !== \"trending\" && data.sort !== \"views\") {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified an invalid sort parameter. The options are 'time', 'trending', or 'views'.\", null));\n      } else if (data && data.type && data.type !== \"all\" && data.type !== \"upload\" && data.type !== \"archive\" && data.type !== \"highlight\") {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified an invalid type parameter. The options are 'all', 'upload', 'archive', or 'highlight'.\", null));\n      } else {\n        queries = queryString.stringify({\n          id: data.id,\n          user_id: data.user_id,\n          game_id: data.game_id,\n          first: data.first,\n          language: data.language,\n          period: data.period,\n          sort: data.sort,\n          type: data.type\n        });\n        request.get(\"https://api.twitch.tv/helix/videos?\" + queries, {}).then(function (data) {\n          resolve(helpers.generatePayload(200, \"success\", \"OK\", data));\n        });\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"var queryString = require(\"query-string\"),\n    request = require(\"./request\"),\n    helpers = require(\"./helpers\");\n\nmodule.exports = {\n  getUsers: data => {\n    return new Promise((resolve, reject) => {\n      if (!data || (!data.id || data.id.length === 0) && (!data.login || data.login.length === 0)) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You must specify a user ID or username.\", null));\n      } else if (data.id && data.id.length > 100) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified too many user IDs. The maximum is 100.\", null));\n      } else if (data.login && data.login.length > 100) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified too many usernames. The maximum is 100.\", null));\n      } else {\n        queries = queryString.stringify({\n          id: data.id,\n          login: data.login\n        });\n        request.get(\"https://api.twitch.tv/helix/users?\" + queries, {}).then(function (data) {\n          resolve(helpers.generatePayload(200, \"success\", \"OK\", data));\n        });\n      }\n    });\n  },\n  getUsersFollows: data => {\n    return new Promise((resolve, reject) => {\n      if (!data || !data.from_id && !data.to_id) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You must specify a from_id or to_id.\", null));\n      } else if (data.first && data.first > 100) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified a first parameter that is too high The maximum is 100.\", null));\n      } else if (data.first && data.first < 0) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You have specified a first parameter that is too low. The minimum is 1.\", null));\n      } else {\n        queries = queryString.stringify({\n          from_id: data.from_id,\n          to_id: data.to_id,\n          first: data.first,\n          after: data.after,\n          before: data.before\n        });\n        request.get(\"https://api.twitch.tv/helix/users/follows?\" + queries, {}).then(function (data) {\n          resolve(helpers.generatePayload(200, \"success\", \"OK\", data));\n        });\n      }\n    });\n  },\n  updateUser: data => {\n    return new Promise((resolve, reject) => {\n      if (!data || !data.token) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You must specify an authorization token.\", null));\n      } else if (!data.description) {\n        resolve(helpers.generatePayload(400, \"bad_request\", \"You must specify a user description.\", null));\n      } else {\n        queries = queryString.stringify({\n          description: data.description\n        });\n        request.put(\"https://api.twitch.tv/helix/users?\" + queries, {\n          token: data.token\n        }).then(function (data) {\n          resolve(helpers.generatePayload(200, \"success\", \"OK\", data));\n        });\n      }\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"script"}
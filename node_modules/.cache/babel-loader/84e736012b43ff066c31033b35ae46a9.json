{"ast":null,"code":"var _classCallCheck = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"F:\\\\webdevjects\\\\nlss-timer\\\\node_modules\\\\@babel\\\\runtime/helpers/inherits\");\n\n// Generated by CoffeeScript 2.4.1\n(function () {\n  var NodeType, XMLDTDElement, XMLNode;\n  XMLNode = require('./XMLNode');\n  NodeType = require('./NodeType'); // Represents an attribute\n\n  module.exports = XMLDTDElement =\n  /*#__PURE__*/\n  function (_XMLNode) {\n    \"use strict\";\n\n    _inherits(XMLDTDElement, _XMLNode);\n\n    // Initializes a new instance of `XMLDTDElement`\n    // `parent` the parent `XMLDocType` element\n    // `name` element name\n    // `value` element content (defaults to #PCDATA)\n    function XMLDTDElement(parent, name, value) {\n      var _this;\n\n      _classCallCheck(this, XMLDTDElement);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(XMLDTDElement).call(this, parent));\n\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + _this.debugInfo());\n      }\n\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n\n      _this.name = _this.stringify.name(name);\n      _this.type = NodeType.ElementDeclaration;\n      _this.value = _this.stringify.dtdElementValue(value);\n      return _this;\n    } // Converts the XML fragment to string\n    // `options.pretty` pretty prints the result\n    // `options.indent` indentation for pretty print\n    // `options.offset` how many indentations to add to every line for pretty print\n    // `options.newline` newline sequence for pretty print\n\n\n    _createClass(XMLDTDElement, [{\n      key: \"toString\",\n      value: function toString(options) {\n        return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n      }\n    }]);\n\n    return XMLDTDElement;\n  }(XMLNode);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}
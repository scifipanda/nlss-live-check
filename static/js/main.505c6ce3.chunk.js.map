{"version":3,"sources":["components/images/twitter.svg","components/images/youtube.svg","components/StreamInfo.js","components/api/twitch.js","components/App.js","index.js"],"names":["module","exports","streamInfo","axios","create","baseURL","headers","live","offline","status","StreamInfo","state","props","user","undefined","checkLive","streamer","a","thisState","twitch","get","params","user_login","response","data","un","user_name","toLowerCase","setState","title","id","game_id","game","name","getGame","className","this","isHidden","href","toUpperCase","src","twittersvg","alt","youtubesvg","React","Component","streamers","App","hide","hideOffline","renderStreamer","bind","key","onClick","map","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.505c6ce3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter.8d462830.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.532a2219.svg\";","import React from 'react';\r\nimport './css/StreamInfo.css';\r\nimport twitch from './api/twitch';\r\nimport twittersvg from './images/twitter.svg';\r\nimport youtubesvg from './images/youtube.svg';\r\n\r\n// Global variables\r\nlet live = 'Live';\r\nlet offline = 'Offline';\r\nlet status = offline;\r\nlet streamInfo;\r\n\r\nclass StreamInfo extends React.Component {\r\n\r\n    state = { [this.props.user[0]]: offline, game: undefined, title: undefined};\r\n\r\n    componentDidMount() {\r\n        this.checkLive(this.props.user[0])\r\n    }\r\n    \r\n    checkLive = async streamer => { // Function to check who is live and to set title to live channels title\r\n        let thisState = this\r\n        \r\n        const response = await twitch.get('/streams/', {\r\n            params: { user_login: streamer }\r\n        })\r\n\r\n        if(response.data.data[0]) {\r\n            streamInfo = response.data.data[0];\r\n            let un = streamInfo.user_name.toLowerCase();\r\n            \r\n            thisState.setState({title: streamInfo.title})\r\n\r\n            const game = await twitch.get('/games/', {\r\n                params: { id: response.data.data[0].game_id}\r\n            })\r\n            \r\n            thisState.setState({game: game.data.data[0].name})\r\n            \r\n            thisState.setState({[un]: live});\r\n        }\r\n    }\r\n \r\n    getGame = () => { // Function to get current game being played by live channel\r\n        let thisState = this\r\n\r\n        if(status === live) {\r\n            return <div className=\"stream-info\">{thisState.game}</div>\r\n        }\r\n    }    \r\n\r\n    render(){\r\n        if(!this.props.isHidden || this.state[this.props.user[0]] === live) { // Only renders if channel is live or if channel is not marked hidden\r\n           return(\r\n            <div className={'stream-container bold center ' + this.state[this.props.user[0]]}>\r\n                <a href={'https://twitch.tv/' + this.props.user[0]}><h1 className='user'>{this.props.user[0].toUpperCase()}</h1></a>\r\n\r\n                <div className=\"stream-info-container\">\r\n                    <a href={'https://twitter.com/' + this.props.user[1]}><img className=\"icon\" src={twittersvg} alt=\"twitter\"/> </a>\r\n                    <div>{this.state[this.props.user[0]]}</div>\r\n                    <a href={'https://youtube.com/' + this.props.user[2]}><img className=\"icon\" src={youtubesvg} alt=\"youtube\" /></a>\r\n                </div>\r\n                \r\n                <hr />\r\n\r\n                <div className=\"stream-title\">{this.state.title}</div>\r\n                <div className=\"stream-title\">{this.state.game}</div>\r\n            </div>\r\n        ) \r\n        }\r\n        return <div className=\"hidden\"></div> // renders invisible div if marked hidden\r\n    }\r\n    \r\n}\r\n\r\nexport default StreamInfo;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://api.twitch.tv/helix/',\r\n    headers: {\r\n        'Client-ID': 'ew5y8dnvd35deca2cqe9ap0ol4hgjy'\r\n    }\r\n});","import React from 'react';\r\nimport './css/main.css'; \r\nimport StreamInfo from './StreamInfo';\r\n\r\n// northernlion: offline, rockleesmile: offline, dumbdog: offline, michaelalfox: offline, jsmithoti: offline, alpacapatrol: offline, cobaltstreak: offline, baertaffy: offline, dangheesling: offline, sinvicta: offline, lovelymomo: offline, mathas: offline, flackblag: offline, hcjustin: offline, itshafu: offline\r\n\r\nlet streamers = [ // List of current streamers [twitch channel] [twitter account] [youtube channel]\r\n    ['northernlion', 'northernlionlp', 'northernlion'],\r\n    ['rockleesmile', 'rockleesmile', 'rockleesmile'],\r\n    ['dumbdog', 'verydumbdog', 'lastgreywolf'],\r\n    ['michaelalfox', 'michaelalfox', 'michaelalfox'],\r\n    ['jsmithoti', 'jsmithoti', 'jsmithoti'],\r\n    ['alpacapatrol', 'alpacapatrol', 'alpacapatrol'],\r\n    ['cobaltstreak', 'cobaltstreak', 'cobaltstreak'],\r\n    ['baertaffy', 'baertaffy', 'baertaffy'],\r\n    ['dangheesling', 'dangheesling', 'dangheesling'],\r\n    ['sinvicta', 'sinvicta316', 'sinvicta'],\r\n    ['lovelymomo', 'katelovelymomo', 'proboxstudio'],\r\n    ['mathasgames', 'mathasgames', 'mathasgames'],\r\n    ['flackblag', 'flackblag7', 'flackblag', ],\r\n    ['hcjustin', 'hcjustinn', 'hcjustin', ],\r\n    ['itshafu', 'itshafu', 'channel/UCddX-H9xUwQH6jOOHuL2vYw']\r\n]\r\n\r\nclass App extends React.Component {\r\n    state = { hide: false };\r\n    constructor(props) {\r\n        super();\r\n        this.renderStreamer = this.renderStreamer.bind(this);\r\n    }\r\n    \r\n\r\n    renderStreamer(streamer) {// Dynamically adds any number of streamers to make adding more later easier\r\n        return <StreamInfo isHidden={this.state.hide === true} user={streamer} key={streamer} /> \r\n    }\r\n\r\n    hideOffline = () => { // Changes state to mark offline channel as hidden\r\n        this.setState({ hide: !this.state.hide })\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='main-container'>\r\n                <div className='footer'>\r\n                    <p>Contact me at <a href='reddit.com/message/compose/?to=scifi_panda'>Reddit</a> or <a href='https://twitter.com/Scifi_Panda'>Twitter</a>.</p>\r\n                    <p>Original by <a href='https://twitter.com/eluctweets'>@eluctweets</a></p>\r\n                </div>\r\n                <h1 className=\"center\">Who is live?</h1>\r\n                <div className='button'>\r\n                    <button onClick={() => this.hideOffline()}>Only show live streams</button>\r\n                </div>\r\n                \r\n                <div className=\"people-container\">\r\n                    {streamers.map(this.renderStreamer)}\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}